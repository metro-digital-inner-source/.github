name: Maven publish
on:
  workflow_dispatch:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]
env:
  FROM_NOTIFICATION_EMAIL_ADDRESS: 'do-not-reply@example.com'
  SMTP_SERVER_ADDRESS: 'smtpserver.example.com'
jobs:
  check-for-existing-issues:
    runs-on: ubuntu-latest
    steps:
    - name: Get open issues labeled as bug
      id: issues
      uses: octokit/request-action@v2.x
      with:
        route: GET /repos/:repo/issues
        repo: ${{ github.repository }}
        state: open
        labels: bug
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Check for issues
      run: |
        exists=$(echo $issues | jq '.[].labels')
        if [[ -n "$exists" ]]; then
          echo "::error::Please resolve the issues labeled as bug for ${{ github.repository }}"
          exit 1
        fi
      env:
        issues: ${{ steps.issues.outputs.data }}
  check-for-smtp-address:
    runs-on: ubuntu-latest
    needs: [check-for-existing-issues]
    outputs:
      status: ${{ steps.smtpserver.outputs.status }}
    steps:
    - name: verify smtp server address
      id: smtpserver
      if: contains(env.SMTP_SERVER_ADDRESS, 'example')
      run: |
        echo "::set-output name=status::invalid"
    - name: create issue for missing smtp server address
      if: contains(steps.smtpserver.outputs.status, 'invalid')
      uses: octokit/request-action@v2.x
      with:
        route: POST /repos/:repo/issues
        repo: ${{ github.repository }}
        title: Fix the smtp server address in the maven-publish workflow
        labels: '[ "bug" ]'
        body: |
          The repository ${{ github.repository }} is configured to have .watchers
          file which sends email notifications on a failed workflow run. In order to send
          these email notifications the workflow must know the SMTP server address.

          Please provide a valid SMTP server address for the environment variable
          "SMTP_SERVER_ADDRESS" in the maven-publish workflow.

          https://github.com/${{ github.repository }}/blob/${{ github.sha }}/.github/workflows/maven-publish.yml#L10
      env:
        GITHUB_TOKEN: ${{ github.token }}
  check-for-artifactstore-credentials:
    runs-on: ubuntu-latest
    needs: [check-for-existing-issues]
    outputs:
      credentials: ${{ steps.artifactstore.outputs.credentials }}
    steps:
    - name: verify artifact store secrets
      id: artifactstore
      if: env.username == '' || env.password == ''
      run: |
        echo "::set-output name=credentials::invalid"
      env:
        username: ${{ secrets.ARTIFACT_STORE_CLIENT_USERNAME }}
        password: ${{ secrets.ARTIFACT_STORE_CLIENT_PASSWORD }}
    - name: create issue for missing artifact store credentials
      if: contains(steps.artifactstore.outputs.credentials, 'invalid')
      uses: octokit/request-action@v2.x
      with:
        route: POST /repos/:repo/issues
        repo: ${{ github.repository }}
        title: Create repository secrets for artifact store
        labels: '[ "bug" ]'
        body: |
          The repository ${{ github.repository }} is configured to have maven publish
          workflow which publishes maven artifacts to an artifact store. In order to
          push these artifacts, workflow must know the credentials of the target artifact
          store.

          Please [create the respository secrets](https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets#creating-encrypted-secrets-for-a-repository),
          "ARTIFACT_STORE_CLIENT_USERNAME" and "ARTIFACT_STORE_CLIENT_PASSWORD" with a valid
          username and password for the artifact store.
      env:
        GITHUB_TOKEN: ${{ github.token }}
  finalize-check:
    runs-on: ubuntu-latest
    needs: [check-for-smtp-address, check-for-artifactstore-credentials]
    steps:
    - name: exit workflow
      if: (needs.check-for-smtp-address.outputs.status == 'invalid') || (needs.check-for-artifactstore-credentials.outputs.credentials == 'invalid')
      run: |
        echo "::error::Please resolve the issues labeled as bug for ${{ github.repository }}"
        exit 1
  maven-push:
    runs-on: [self-hosted, Linux, metro-network]
    needs: [finalize-check]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Set up Maven
      # This action will use the unfixed toolkit/core modules from GitHub
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: 3.5.4
    - name: Run the Maven verify phase
      run: mvn -B verify --file pom.xml
    - name: Maven build
      run: mvn -s mvn-settings.xml -Dusername=${{ secrets.ARTIFACT_STORE_CLIENT_USERNAME }} -Dpassword=${{ secrets.ARTIFACT_STORE_CLIENT_PASSWORD }} compile
    - name: Maven test
      run: mvn -s mvn-settings.xml -Dusername=${{ secrets.ARTIFACT_STORE_CLIENT_USERNAME }} -Dpassword=${{ secrets.ARTIFACT_STORE_CLIENT_PASSWORD }} test
    - name: Maven generate Javadoc
      run: mvn -s mvn-settings.xml -Dusername=${{ secrets.ARTIFACT_STORE_CLIENT_USERNAME }} -Dpassword=${{ secrets.ARTIFACT_STORE_CLIENT_PASSWORD }} -DskipTests install javadoc:jar
    - name: Maven deploy
      run: |
        mvn -s mvn-settings.xml -Dusername=${{ secrets.ARTIFACT_STORE_CLIENT_USERNAME }} -Dpassword=${{ secrets.ARTIFACT_STORE_CLIENT_PASSWORD }} -DskipTests -DperformRelease deploy
    - name: Execute after step
      run: |
        [ -s "./pipeline-after.sh" ] && {
          chmod +x ./pipeline-after.sh
          ./pipeline-after.sh
        } || :
  notification:
    needs: [maven-push, finalize-check, check-for-existing-issues]
    runs-on: [self-hosted, Linux, metro-network]
    if: failure()
    steps:
    - uses: actions/checkout@v2
    - name: Read teams channel from file
      id: teamschannel
      run: |
        [ -s "./.teamschannel" ] && {
          teams_channel=$(cat .teamschannel)
          echo "::set-output name=webhook-url::$teams_channel"
        } || :
    - name: Send message to ms teams
      if: steps.teamschannel.outputs.webhook-url != ''
      uses: aliencube/microsoft-teams-actions@v0.8.0
      with:
        webhook_uri: ${{ steps.teamschannel.outputs.webhook-url }}
        title: Github Workflow Status
        summary: Maven Push failed for ${{ github.repository }}
        sections: '[{ "activityTitle": "Maven publish failed!",  "activitySubtitle": "Event triggered by ${{ github.event.head_commit.author.name }}", "activityText": "**Commit message**: ${{ github.event.head_commit.message}}, [click here to go the commit.](${{ github.event.head_commit.url }})"}]'
        actions: '[{ "@context": "http://schema.org", "@type": "OpenUri", "name": "Review Commit Diffs", "targets": [{ "os": "default", "uri": "${{ github.event.compare }}" }] }, { "@context": "http://schema.org", "@type": "OpenUri", "name": "Failed Build", "targets": [{ "os": "default", "uri": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" }] }]'
    - name: Check existence of file .watchers
      id: exists_watchers
      uses: andstor/file-existence-action@v1
      with:
        files: ".watchers"
    - name: Read watchers from file
      id: watchers
      run: |
        [ -s "./.watchers" ] && {
          watchers=()
          while read email;
          do
            watchers="${email},${watchers}"
          done <<< $(cat .watchers)
          watchers=${watchers%?}
          echo "::set-output name=email-ids::$watchers"
        } || :
    - name: Send a notification mail
      if: steps.watchers.outputs.email-ids != ''
      uses: wadeww/send-email-action@master
      with:
        server_address: ${{ env.SMTP_SERVER_ADDRESS }}
        port: 25
        subject: Github Workflow failed
        body: |
          Hello,

          The Github workflow publishing maven artifacts failed!

          Repository: https://github.com/${{ github.repository }}
          Commit Message: ${{ github.event.head_commit.message }}
          Commit Link: ${{ github.event.head_commit.url }}
          Failed Build: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

          Regards,
          2Tier Deployment Team
        to: ${{ steps.watchers.outputs.email-ids }}
        from: ${{ env.FROM_NOTIFICATION_EMAIL_ADDRESS }}
