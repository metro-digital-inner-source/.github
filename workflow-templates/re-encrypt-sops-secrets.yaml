name: Re-encrypt secrets
on:
  workflow_dispatch:
    inputs:
      token:
        description: "Personal access token(scope: read:org, repo)"
        required: true
jobs:
  re-encrypt-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Fail workflow if private key is empty
        if: env.secret == ''
        run: |
          echo "::error::Unable to re-encrypt the secrets, the repository private GPG key is empty."
          echo "::error::The repository private GPG key is created upon subscription to secret-management and stored as a repository secret."
          exit 1
        env:
          secret: ${{ secrets.GPG_KEY }}
      - name: Get users with write access on the repository
        uses: metro-digital-inner-source/get-users-with-access-on-repo@v1.x
        id: users
        with:
          owner: ${{github.event.repository.owner.login}}
          repo: ${{github.event.repository.name}}
          access_level: write
        env:
          GITHUB_TOKEN: ${{ github.event.inputs.token }}
      - uses: actions/checkout@v2
        with:
          path: actions/generator/workspace
      - name: Add repository public key
        working-directory: actions/generator/workspace
        id: public_keys
        run: |
          GPG_KEYS=$(echo '${{ steps.users.outputs.data }}' | jq -rc '.users[].gpg_keys_base64[]')
          repo_public_key=$(cat .github/.gpg | base64 | tr -d '\n')
          GPG_KEYS+=( "$repo_public_key" )
          public_gpg_keys=$(printf '%s\n' "${GPG_KEYS[@]}" | jq -R . | jq -s . | jq -rc .)
          echo "::set-output name=base64_encoded::$public_gpg_keys"
      - name: create a local branch on the repository
        id: branch
        working-directory: actions/generator/workspace
        run: |
          branch="secret-management/sops/reencryption-${{ github.run_id }}"
          git checkout -b "$branch"
          echo "::set-output name=work_branch::$branch"
      - name: Populate public keys file
        run: |
          echo '${{ steps.public_keys.outputs.base64_encoded }}' | jq -rc .[] > actions/generator/public_keys.txt
      - name: Rencrypt-secrets
        uses: metro-digital-inner-source/sops-encryption-generator@v1.x
        with:
          params: '{ "private_key": "${{ secrets.GPG_KEY }}" }'
      - name: commit and push
        uses: EndBug/add-and-commit@v9
        with:
          message: "Re-encrypt secret files to provide access"
          new_branch: ${{ steps.branch.outputs.work_branch }}
          cwd: actions/generator/workspace
      - name: create a pull request on target repository
        id: pull-request
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repo/pulls
          repo: ${{github.event.repository.full_name}}
          title: "Re-encryption of secret files"
          head: ${{ steps.branch.outputs.work_branch }}
          base: ${{ github.event.repository.default_branch }}
          body: "The secret files present in the repository are re-encrypted with the GPG keys configured on the GitHub user accounts that has at least PUSH access on this repository."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
